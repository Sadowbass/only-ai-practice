plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.18'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.sadowbass'
archivesBaseName = 'mcp-test-backend'
version = '0.0.1-SNAPSHOT'
description = 'Demo project for Spring Boot'

java {
	sourceCompatibility = '11'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'com.querydsl:querydsl-jpa'
	runtimeOnly 'com.h2database:h2'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'com.querydsl:querydsl-apt::jpa'
    annotationProcessor 'javax.persistence:javax.persistence-api'
    annotationProcessor 'javax.annotation:javax.annotation-api'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test' // Add this line

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // SpringDoc (Swagger UI)
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.15'
}

tasks.named('test') {
	useJUnitPlatform()
}

def generatedDir = "src/main/generated"

sourceSets {
	main {
		java {
			srcDirs = ['src/main/java', generatedDir]
		}
	}
}

tasks.withType(JavaCompile) {
	options.getGeneratedSourceOutputDirectory().set(file(generatedDir))
}

clean {
	delete file(generatedDir)
}
